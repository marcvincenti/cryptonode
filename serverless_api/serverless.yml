service: cryptonode-api

frameworkVersion: ">=1.2.0 <2.0.0"

provider:
  name: aws
  runtime: python2.7
  region: eu-west-1
  environment:
    DYNAMODB_CURRENCIES_TABLE: cryptocurrencies
    DYNAMODB_MASTERNODES_COUNT_TABLE: masternode_count
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:UpdateItem
        - dynamodb:Scan
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_CURRENCIES_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_MASTERNODES_COUNT_TABLE}"

functions:
  all-currencies:
    handler: all.list
    events:
      - http:
          path: currencies
          method: get
          cors: true
  transfercoin-price:
    handler: currencies/transfercoin.price
    events:
      - schedule: rate(5 minutes)
  transfercoin-masternodes:
    handler: currencies/transfercoin.masternodes
    events:
      - schedule: rate(5 minutes)
  transfercoin-historywrite:
    handler: currencies/transfercoin.masternodes_history
    events:
      - schedule: rate(6 hours)
  transfercoin-get:
    handler: currencies/transfercoin.get
    events:
      - http:
          path: currency/tx
          method: get
          cors: true
  transfercoin-historyread:
    handler: currencies/transfercoin.get_history
    events:
      - http:
          path: currency/tx/history
          method: get
          cors: true
  pivx-price:
    handler: currencies/pivx.price
    events:
      - schedule: rate(5 minutes)
  pivx-masternodes:
    handler: currencies/pivx.masternodes
    events:
      - schedule: rate(5 minutes)
  pivx-history:
    handler: currencies/pivx.masternodes_history
    events:
      - schedule: rate(6 hours)
  pivx-get:
    handler: currencies/pivx.get
    events:
      - http:
          path: currency/pivx
          method: get
          cors: true
  dash-price:
    handler: currencies/dash.price
    events:
      - schedule: rate(5 minutes)
  dash-masternodes:
    handler: currencies/dash.masternodes
    events:
      - schedule: rate(10 minutes)
  dash-history:
    handler: currencies/dash.masternodes_history
    events:
      - schedule: rate(6 hours)
  dash-get:
    handler: currencies/dash.get
    events:
      - http:
          path: currency/dash
          method: get
          cors: true
  crown-price:
    handler: currencies/crown.price
    events:
      - schedule: rate(5 minutes)
  crown-masternodes:
    handler: currencies/crown.masternodes
    events:
      - schedule: rate(5 minutes)
  crown-history:
    handler: currencies/crown.masternodes_history
    events:
      - schedule: rate(6 hours)
  crown-get:
    handler: currencies/crown.get
    events:
      - http:
          path: currency/crown
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: coin
            AttributeType: S
        KeySchema:
          -
            AttributeName: coin
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_CURRENCIES_TABLE}
    MasterNodesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: coin
            AttributeType: S
          -
            AttributeName: timestamp
            AttributeType: N
        KeySchema:
          -
            AttributeName: coin
            KeyType: HASH
          -
            AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_MASTERNODES_COUNT_TABLE}

