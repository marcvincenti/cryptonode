service: cryptonode-api

frameworkVersion: ">=1.2.0 <2.0.0"

provider:
  name: aws
  runtime: python2.7
  region: eu-west-1
  environment:
    DYNAMODB_CURRENCIES_TABLE: cryptocurrencies
    DYNAMODB_MASTERNODES_COUNT_TABLE: masternode_count
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:UpdateItem
        - dynamodb:Scan
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_CURRENCIES_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_MASTERNODES_COUNT_TABLE}"

functions:
  all-currencies:
    handler: queries.list
    events:
      - http:
          path: currencies
          method: get
          cors: true
  transfercoin-price:
    handler: commons.price
    events:
      - schedule: rate(5 minutes)
    environment:
      COIN_ID: TransferCoin
      COIN_TICKER: transfercoin
  transfercoin-masternodes:
    handler: currencies/transfercoin.masternodes
    events:
      - schedule: rate(5 minutes)
  transfercoin-historywrite:
    handler: commons.masternodes_history
    events:
      - schedule: cron(0 0/6 * * ? *)
    environment:
      COIN_ID: TransferCoin
  transfercoin-get:
    handler: queries.get
    events:
      - http:
          path: currency/tx
          method: get
          cors: true
    environment:
      COIN_ID: TransferCoin
  transfercoin-historyread:
    handler: queries.mn_count_history
    events:
      - http:
          path: currency/tx/history
          method: get
          cors: true
    environment:
      COIN_ID: TransferCoin
  pivx-price:
    handler: commons.price
    events:
      - schedule: rate(5 minutes)
    environment:
      COIN_ID: PIVX
      COIN_TICKER: pivx
  pivx-masternodes:
    handler: currencies/pivx.masternodes
    events:
      - schedule: rate(5 minutes)
  pivx-historywrite:
    handler: commons.masternodes_history
    events:
      - schedule: cron(0 0/6 * * ? *)
    environment:
      COIN_ID: PIVX
  pivx-get:
    handler: queries.get
    events:
      - http:
          path: currency/pivx
          method: get
          cors: true
    environment:
      COIN_ID: PIVX
  pivx-historyread:
    handler: queries.mn_count_history
    events:
      - http:
          path: currency/pivx/history
          method: get
          cors: true
    environment:
      COIN_ID: PIVX
  dash-price:
    handler: commons.price
    events:
      - schedule: rate(5 minutes)
    environment:
      COIN_ID: Dash
      COIN_TICKER: dash
  dash-masternodes:
    handler: currencies/dash.masternodes
    events:
      - schedule: rate(10 minutes)
  dash-historywrite:
    handler: commons.masternodes_history
    events:
      - schedule: cron(0 0/6 * * ? *)
    environment:
      COIN_ID: Dash
  dash-get:
    handler: queries.get
    events:
      - http:
          path: currency/dash
          method: get
          cors: true
    environment:
      COIN_ID: Dash
  dash-historyread:
    handler: queries.mn_count_history
    events:
      - http:
          path: currency/dash/history
          method: get
          cors: true
    environment:
      COIN_ID: Dash
  crown-price:
    handler: commons.price
    events:
      - schedule: rate(5 minutes)
    environment:
      COIN_ID: Crown
      COIN_TICKER: crown
  crown-masternodes:
    handler: currencies/crown.masternodes
    events:
      - schedule: rate(5 minutes)
  crown-historywrite:
    handler: commons.masternodes_history
    events:
      - schedule: cron(0 0/6 * * ? *)
    environment:
      COIN_ID: Crown
  crown-get:
    handler: queries.get
    events:
      - http:
          path: currency/crown
          method: get
          cors: true
    environment:
      COIN_ID: Crown
  crown-historyread:
    handler: queries.mn_count_history
    events:
      - http:
          path: currency/crown/history
          method: get
          cors: true
    environment:
      COIN_ID: Crown
  monetaryunit-price:
    handler: commons.price
    events:
      - schedule: rate(5 minutes)
    environment:
      COIN_ID: MonetaryUnit
      COIN_TICKER: monetaryunit
  monetaryunit-masternodes:
    handler: currencies/mue.masternodes
    events:
      - schedule: rate(5 minutes)
  monetaryunit-historywrite:
    handler: commons.masternodes_history
    events:
      - schedule: cron(0 0/6 * * ? *)
    environment:
      COIN_ID: MonetaryUnit
  monetaryunit-get:
    handler: queries.get
    events:
      - http:
          path: currency/mue
          method: get
          cors: true
    environment:
      COIN_ID: MonetaryUnit
  monetaryunit-historyread:
    handler: queries.mn_count_history
    events:
      - http:
          path: currency/mue/history
          method: get
          cors: true
    environment:
      COIN_ID: MonetaryUnit
  bitsend-price:
    handler: commons.price
    events:
      - schedule: rate(5 minutes)
    environment:
      COIN_ID: BitSend
      COIN_TICKER: bitsend
  bitsend-masternodes:
    handler: currencies/bitsend.masternodes
    events:
      - schedule: rate(5 minutes)
  bitsend-historywrite:
    handler: commons.masternodes_history
    events:
      - schedule: cron(0 0/6 * * ? *)
    environment:
      COIN_ID: BitSend
  bitsend-get:
    handler: queries.get
    events:
      - http:
          path: currency/bitsend
          method: get
          cors: true
    environment:
      COIN_ID: BitSend
  bitsend-historyread:
    handler: queries.mn_count_history
    events:
      - http:
          path: currency/bitsend/history
          method: get
          cors: true
    environment:
      COIN_ID: BitSend

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: coin
            AttributeType: S
        KeySchema:
          -
            AttributeName: coin
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_CURRENCIES_TABLE}
    MasterNodesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: coin
            AttributeType: S
          -
            AttributeName: timestamp
            AttributeType: N
        KeySchema:
          -
            AttributeName: coin
            KeyType: HASH
          -
            AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_MASTERNODES_COUNT_TABLE}
